<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>QBlog</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2018-11-17T20:53:30+08:00</updated><entry><title>resnet on horovod with multi GPUs</title><link href="/blog/resnet-on-horovod-with-multi-gpus.html" rel="alternate"></link><published>2018-11-17T20:53:30+08:00</published><updated>2018-11-17T20:53:30+08:00</updated><author><name>zqlai</name></author><id>tag:None,2018-11-17:/blog/resnet-on-horovod-with-multi-gpus.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2018-11-15 23:37:49.001918: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1490] Adding visible gpu devices: 1
2018-11-15 23:37:49.001953: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-11-15 23:37:49.001960: I tensorflow/core/common_runtime/gpu/gpu_device …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2018-11-15 23:37:49.001918: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1490] Adding visible gpu devices: 1
2018-11-15 23:37:49.001953: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-11-15 23:37:49.001960: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977]      1 
2018-11-15 23:37:49.001965: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990] 1:   N 
Traceback (most recent call last):
File &amp;quot;cifar10_main.py&amp;quot;, line 274, in &amp;lt;module&amp;gt;
absl_app.run(main)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/absl/app.py&amp;quot;, line 300, in run
_run_main(main, args)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/absl/app.py&amp;quot;, line 251, in _run_main
sys.exit(main(argv))
File &amp;quot;cifar10_main.py&amp;quot;, line 268, in main
run_cifar(flags.FLAGS)
File &amp;quot;cifar10_main.py&amp;quot;, line 263, in run_cifar
shape=[_HEIGHT, _WIDTH, _NUM_CHANNELS])
File &amp;quot;/THL5/home/wql17/zqlai/models/official/resnet/resnet_run_loop.py&amp;quot;, line 587, in resnet_main
max_steps=flags_obj.max_train_steps)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py&amp;quot;, line 356, in train
loss = self._train_model(input_fn, hooks, saving_listeners)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py&amp;quot;, line 1179, in _train_model
return self._train_model_distributed(input_fn, hooks, saving_listeners)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py&amp;quot;, line 1326, in _train_model_distributed
saving_listeners)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py&amp;quot;, line 1406, in _train_with_estimator_spec
log_step_count_steps=self._config.log_step_count_steps) as mon_sess:
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py&amp;quot;, line 504, in MonitoredTrainingSession
stop_grace_period_secs=stop_grace_period_secs)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py&amp;quot;, line 921, in __init__
stop_grace_period_secs=stop_grace_period_secs)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py&amp;quot;, line 643, in __init__
self._sess = _RecoverableSession(self._coordinated_creator)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py&amp;quot;, line 1107, in __init__
_WrappedSession.__init__(self, self._create_session())
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py&amp;quot;, line 1112, in _create_session
return self._sess_creator.create_session()
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py&amp;quot;, line 800, in create_session
self.tf_sess = self._session_creator.create_session()
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py&amp;quot;, line 566, in create_session
init_fn=self._scaffold.init_fn)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/session_manager.py&amp;quot;, line 281, in prepare_session
config=config)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/session_manager.py&amp;quot;, line 184, in _restore_checkpoint
sess = session.Session(self._target, graph=self._graph, config=config)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/client/session.py&amp;quot;, line 1511, in __init__
I1115 23:37:49.481643 47000205927040 tf_logging.py:115] Running local_init_op.
super(Session, self).__init__(target, graph, config=config)
File &amp;quot;/THL5/home/wql17/anaconda2/lib/python2.7/site-packages/tensorflow/python/client/session.py&amp;quot;, line 634, in __init__
self._session = tf_session.TF_NewSessionRef(self._graph._c_graph, opts)
&lt;/pre&gt;&lt;/div&gt;</content><category term="horovod"></category><category term="resnet"></category></entry><entry><title>setting for ssh login without password input</title><link href="/blog/setting-for-ssh-login-without-password-input.html" rel="alternate"></link><published>2018-11-12T21:41:06+08:00</published><updated>2018-11-12T21:41:06+08:00</updated><author><name>zqlai</name></author><id>tag:None,2018-11-12:/blog/setting-for-ssh-login-without-password-input.html</id><summary type="html">&lt;p&gt;just two&amp;nbsp;steps&lt;/p&gt;
&lt;p&gt;1.generate key pairs if not&amp;nbsp;exist&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -t rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If success, you will find &lt;code&gt;id_rsa&lt;/code&gt; and &lt;code&gt;id_rsa.pub&lt;/code&gt; in the &lt;code&gt;~/.ssh/&lt;/code&gt; dir&lt;/p&gt;
&lt;p&gt;2.copy the public key to the server you want to&amp;nbsp;login&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-copy-id username@hostname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, it will authorize your permission by&amp;nbsp;password.&lt;/p&gt;
&lt;p&gt;If …&lt;/p&gt;</summary><content type="html">&lt;p&gt;just two&amp;nbsp;steps&lt;/p&gt;
&lt;p&gt;1.generate key pairs if not&amp;nbsp;exist&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -t rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If success, you will find &lt;code&gt;id_rsa&lt;/code&gt; and &lt;code&gt;id_rsa.pub&lt;/code&gt; in the &lt;code&gt;~/.ssh/&lt;/code&gt; dir&lt;/p&gt;
&lt;p&gt;2.copy the public key to the server you want to&amp;nbsp;login&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-copy-id username@hostname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, it will authorize your permission by&amp;nbsp;password.&lt;/p&gt;
&lt;p&gt;If both steps is done, you can ssh to the server without password input.
In the ~/.ssh/authorized_key file on the server, you will find an entry&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCpwXmBPQcLBDDZxUa18bLHoL0WrCRx9KR/4Dryyp4bbqq9877/hYQCKq9Cxvjvo6pBkQB6DdykEHnJIVKhgGGt1y85L0IYTkazM8O4Q04sj/RhBvscf5fOdSedRu7UVzULVccBrm1/uzfDZQnUgDUTrmGe3ynGVU0tjxwjXay5Xj7KZJmggGKR40bQ3eZAiXGbQSDSYaF9teT1aLh6z3Z0Z/7g7EtOwBWRrWoLlhgNiBF7uHi4FGlHxj2u9jcRTKzdI/rfTaVJZNyVuS7sSUqDl7fGyQ1XJq4AEKZg/wRuomKlme7aLl9Ee+8Lj+/kpdEcRYNImJHV9CdTKYZXNIFZ XX@XX
&lt;/pre&gt;&lt;/div&gt;</content><category term="ssh"></category></entry><entry><title>test post - how to set up django on ubuntu 18.04</title><link href="/blog/my%20second%20post.html" rel="alternate"></link><published>2018-11-12T21:39:55+08:00</published><updated>2018-11-12T21:39:55+08:00</updated><author><name>zqlai</name></author><id>tag:None,2018-11-12:/blog/my second post.html</id><summary type="html">&lt;p&gt;summary django setting&amp;nbsp;up&lt;/p&gt;</summary><content type="html">&lt;h1&gt;This is the content of my super blog&amp;nbsp;post.&lt;/h1&gt;
&lt;h2&gt;title&amp;nbsp;2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;item1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**&amp;nbsp;item2&lt;/p&gt;
&lt;p&gt;***&amp;nbsp;item3&lt;/p&gt;
&lt;h3&gt;title&amp;nbsp;3&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;item1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**&amp;nbsp;item2&lt;/p&gt;
&lt;p&gt;***&amp;nbsp;item3&lt;/p&gt;
&lt;h4&gt;title&amp;nbsp;4&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;item1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**&amp;nbsp;item2&lt;/p&gt;
&lt;p&gt;***&amp;nbsp;item3&lt;/p&gt;
&lt;p&gt;&amp;#8212; test&amp;nbsp;&amp;#8212;&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#8212;&amp;nbsp;dassh&lt;/p&gt;
&lt;p&gt;&lt;code&gt;empty&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;item1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**&amp;nbsp;item2&lt;/p&gt;
&lt;p&gt;***&amp;nbsp;item3&lt;/p&gt;</content><category term="pelican"></category><category term="publishing"></category></entry><entry><title>build Django on Godady virtual host</title><link href="/blog/build-django-on-godady-virtual-host.html" rel="alternate"></link><published>2018-11-08T22:08:39+08:00</published><updated>2018-11-08T22:08:39+08:00</updated><author><name>zqlai</name></author><id>tag:None,2018-11-08:/blog/build-django-on-godady-virtual-host.html</id><summary type="html">&lt;p&gt;just get a Godady virtual host, &lt;span class="caps"&gt;WITHOUT&lt;/span&gt; pip tool, only&amp;nbsp;python2.6&lt;/p&gt;
&lt;p&gt;let&amp;#8217;s&amp;nbsp;begin&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;download source of python3.7.0 and unzip&amp;nbsp;it&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd python_source_dir
./configure
make
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;when &lt;code&gt;make install&lt;/code&gt;, an error came&amp;nbsp;out:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;      &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;_ctypes&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Structure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Array&lt;/span&gt;
      &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_ctypes&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Googling it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;just get a Godady virtual host, &lt;span class="caps"&gt;WITHOUT&lt;/span&gt; pip tool, only&amp;nbsp;python2.6&lt;/p&gt;
&lt;p&gt;let&amp;#8217;s&amp;nbsp;begin&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;download source of python3.7.0 and unzip&amp;nbsp;it&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd python_source_dir
./configure
make
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;when &lt;code&gt;make install&lt;/code&gt;, an error came&amp;nbsp;out:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;      &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;_ctypes&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Structure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Array&lt;/span&gt;
      &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_ctypes&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Googling it, seems that we need install libffi-dev,&amp;nbsp;then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;download source and
./configure make make install DESTDIR=~/software
setup the LD_LIBRARY_PATH in the .bashrc and source it
&lt;/pre&gt;&lt;/div&gt;</content><category term="Django"></category><category term="Godady"></category></entry><entry><title>Migrate problem when replace the db.sqlite3 file</title><link href="/blog/migrate-problem-when-replace-the-dbsqlite3-file.html" rel="alternate"></link><published>2018-11-04T09:43:25+08:00</published><updated>2018-11-04T09:43:25+08:00</updated><author><name>zqlai</name></author><id>tag:None,2018-11-04:/blog/migrate-problem-when-replace-the-dbsqlite3-file.html</id><summary type="html">&lt;h2&gt;从其他开发人员拷贝一个db.sqlite3文件，覆盖本地文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py makemigrations
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sqlite3.OperationalError: table &amp;quot;django_admin_log&amp;quot; already exists
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;估计是靠过来的db.sqlite3文件中已经有django_admin_log表，但是django_migrations&amp;nbsp;表中没有记录本地的migration脚本，所以导致再建一次表，报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py migrate easydict
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;单独迁移easydict，希望不会再迁移其他app，但还是报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@X250:~/118/yiji.git# python manage.py migrate easydict
Operations to perform:
Apply all migrations: easydict
Running migrations:
Applying auth.0002_auto_20181008_1626 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;从其他开发人员拷贝一个db.sqlite3文件，覆盖本地文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py makemigrations
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sqlite3.OperationalError: table &amp;quot;django_admin_log&amp;quot; already exists
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;估计是靠过来的db.sqlite3文件中已经有django_admin_log表，但是django_migrations&amp;nbsp;表中没有记录本地的migration脚本，所以导致再建一次表，报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py migrate easydict
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;单独迁移easydict，希望不会再迁移其他app，但还是报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@X250:~/118/yiji.git# python manage.py migrate easydict
Operations to perform:
Apply all migrations: easydict
Running migrations:
Applying auth.0002_auto_20181008_1626...Traceback (most recent call last):
File &amp;quot;/usr/local/lib/python3.6/dist-packages/Django-2.1.1-py3.6.egg/django/db/backends/utils.py&amp;quot;, line 83, in _execute
return self.cursor.execute(sql)
File &amp;quot;/usr/local/lib/python3.6/dist-packages/Django-2.1.1-py3.6.egg/django/db/backends/sqlite3/base.py&amp;quot;, line 294, in execute
return Database.Cursor.execute(self, query)
sqlite3.OperationalError: table &amp;quot;auth_group&amp;quot; already exists
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;看了一下migrate的帮助文档，有一个&amp;#8212;fake-initial参数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  --fake-initial        Detect if tables already exist and fake-apply initial
                        migrations if so. Make sure that the current database
                        schema matches your initial migration before using
                        this flag. Django will only check for an existing
                        table name.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;意思似乎是现有的表不迁移，所以执行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py migrate --fake-initial
root@X250:~/118/yiji.git# python manage.py migrate --fake-initial
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, easyadmin, easydict, sessions
  Running migrations:
    Applying admin.0002_logentry... FAKED
    Applying admin.0003_logentry_user... FAKED
    Applying auth.0002_auto_20181008_1626... FAKED
    Applying auth.0003_auto_20181020_0345... OK
    Applying auth.0004_auto_20181028_2319... OK
    Applying easyadmin.0001_initial... OK

ValueError: Related model &amp;#39;easydict.User&amp;#39; cannot be resolved
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，终于看到这个错误了！！&lt;/p&gt;
&lt;p&gt;单独迁移easydict试试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@X250:~/118/yiji.git# python manage.py migrate easydict
Operations to perform:
  Apply all migrations: easydict
  Traceback (most recent call last):
    File &amp;quot;manage.py&amp;quot;, line 22, in &amp;lt;module&amp;gt;

ValueError: The field admin.LogEntry.user was declared with a lazy reference to &amp;#39;easydict.user&amp;#39;, but app &amp;#39;easydict&amp;#39; isn&amp;#39;t installed.
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;试了好多方法，还是这个错误，最好暴力。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@X250:~/118/yiji.git# rm easydict/migrations/ -r
root@X250:~/118/yiji.git# python manage.py makemigrations easydict 
Migrations for &amp;#39;easydict&amp;#39;:
  easydict/migrations/0001_initial.py
      - Create model User
      - Create model ClassInSchool
      - Create model course_level0_table
      - Create model course_level1_table
      - Create model course_level2_table
      - Create model LearningRecord
      - Create model School
      - Create model UserAct
      - Create model Word
      - Add field word to learningrecord
      - Add field school to classinschool
      - Add field classInSchool to user
      - Add field groups to user
      - Add field school to user
      - Add field user_permissions to user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;似乎ok了&lt;/p&gt;
&lt;p&gt;启动网站，打开http://127.0.0.1:8000/admin/easydict/school/，报错：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;no such column: easydict_school.telephone
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;奇怪了，难道是数据库的easydict一直没有成功吗？打开dbshell，看一下easydict.school的定义：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sqlite&amp;gt; select * from sqlite_master where type=&amp;#39;table&amp;#39; and name=&amp;#39;easydict_school&amp;#39;;
table|easydict_school|easydict_school|28|CREATE TABLE &amp;quot;easydict_school&amp;quot; (&amp;quot;id&amp;quot; integer NOT NULL PRIMARY KEY AUTOINCREMENT, &amp;quot;name&amp;quot; varchar(100) NOT NULL, &amp;quot;address&amp;quot; varchar(200) NOT NULL, &amp;quot;telphone&amp;quot; varchar(20) NOT NULL, &amp;quot;Fax&amp;quot; varchar(20) NOT NULL, &amp;quot;website&amp;quot; varchar(100) NOT NULL, &amp;quot;description&amp;quot; varchar(100) NOT NULL, &amp;quot;manager_id&amp;quot; integer NOT NULL REFERENCES &amp;quot;easydict_user&amp;quot; (&amp;quot;id&amp;quot;) DEFERRABLE INITIALLY DEFERRED)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;果然，还是telphone，少了一个&amp;#8217;e&amp;#8217;&lt;/p&gt;
&lt;p&gt;但是easydict/migrations/0001_initial里的定义是没错的&lt;/p&gt;
&lt;h2&gt;似乎找到一个问题, easydict&amp;nbsp;一直没有迁移成功&lt;/h2&gt;
&lt;p&gt;也就是说，之前easydict/migrations下有好多脚本，到了0006，包含了model更新的记录，删掉之后重新makemigrations生成的脚本也没有作用到数据库中.&amp;nbsp;什么原因？&lt;/p&gt;
&lt;p&gt;查看数据库中django_migrations表：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sqlite&amp;gt; select * from django_migrations;
1|contenttypes|0001_initial|2018-10-28 16:18:49.518411
2|contenttypes|0002_remove_content_type_name|2018-10-28 16:18:49.546412
3|auth|0001_initial|2018-10-28 16:18:49.573414
4|auth|0002_alter_permission_name_max_length|2018-10-28 16:18:49.590415
5|auth|0003_alter_user_email_max_length|2018-10-28 16:18:49.601416
6|auth|0004_alter_user_username_opts|2018-10-28 16:18:49.614416
7|auth|0005_alter_user_last_login_null|2018-10-28 16:18:49.625417
8|auth|0006_require_contenttypes_0002|2018-10-28 16:18:49.629417
9|auth|0007_alter_validators_add_error_messages|2018-10-28 16:18:49.642418
10|auth|0008_alter_user_username_max_length|2018-10-28 16:18:49.653419
11|auth|0009_alter_user_last_name_max_length|2018-10-28 16:18:49.665419
12|easydict|0001_initial|2018-10-28 16:18:49.831429
13|admin|0001_initial|2018-10-28 16:18:49.857430
14|admin|0002_logentry_remove_auto_add|2018-10-28 16:18:49.884432
15|sessions|0001_initial|2018-10-28 16:18:49.897433
16|admin|0002_logentry|2018-11-03 13:24:52.145426
17|admin|0003_logentry_user|2018-11-03 13:24:52.163519
18|auth|0002_auto_20181008_1626|2018-11-03 13:24:52.197976
19|auth|0003_auto_20181020_0345|2018-11-03 13:24:52.211341
20|auth|0004_auto_20181028_2319|2018-11-03 13:24:52.223982
21|easyadmin|0001_initial|2018-11-03 13:24:52.237841
22|easyadmin|0002_charge_manageractlog|2018-11-03 13:35:25.042510
23|sessions|0002_auto_20181008_1626|2018-11-03 13:35:25.055024
24|easydict|0002_auto_20181103_1342|2018-11-03 14:06:10.146670
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也就是说，这里记录了easydict/0001_initial已经迁移过了，在migrate的时候，新makemigrations生成的0001_initial是不会执行的。&lt;/p&gt;
&lt;p&gt;怎么解决，删掉这条记录？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@X250:~/118/yiji.git# python manage.py migrate easydict
Traceback (most recent call last):
     django.db.migrations.exceptions.InconsistentMigrationHistory: Migration easydict.0002_auto_20181103_1342 is applied before its dependency easydict.0001_initial on database &amp;#39;default&amp;#39;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;还不行，删掉整个表数据。&amp;nbsp;然后，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@X250:~/118/yiji.git# python manage.py migrate easydict
Operations to perform:
  Apply all migrations: easydict
  Running migrations:
  Applying contenttypes.0001_initial...Traceback (most recent call last):
  File &amp;quot;/usr/local/lib/python3.6/dist-packages/Django-2.1.1-py3.6.egg/django/db/backends/utils.py&amp;quot;, line 83, in _execute
  return self.cursor.execute(sql)
  File &amp;quot;/usr/local/lib/python3.6/dist-packages/Django-2.1.1-py3.6.egg/django/db/backends/sqlite3/base.py&amp;quot;, line 294, in execute
  return Database.Cursor.execute(self, query)
    sqlite3.OperationalError: table &amp;quot;django_content_type&amp;quot; already exists
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好吧，再来：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@X250:~/118/yiji.git# python manage.py migrate easydict --fake-initial
Operations to perform:
  Apply all migrations: easydict
  Running migrations:
  Applying contenttypes.0001_initial... FAKED
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0001_initial... OK
  Applying auth.0002_auto_20181008_1626... FAKED
  Applying auth.0003_auto_20181020_0345... OK
  Applying auth.0004_auto_20181028_2319... OK
  Applying easydict.0001_initial... FAKED
  Applying easydict.0002_auto_20181103_1342... OK
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，easydict总算迁移成功。&amp;#8230;&lt;/p&gt;
&lt;p&gt;** 为什么migrate easydict&amp;nbsp;还会迁移auth和contecttypes呢？&lt;/p&gt;
&lt;p&gt;可能是依赖关系导致.&lt;/p&gt;
&lt;h2&gt;等等， easydict.0001_initial是&lt;code&gt;FAKED&lt;/code&gt;，也就是没有真的迁移？！&lt;/h2&gt;
&lt;p&gt;去数据库查，果真没有更新，折腾半天都是瞎折腾。。。&amp;nbsp;试试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@X250:~/118/yiji.git# python manage.py migrate easydict
....

django.db.utils.OperationalError: table &amp;quot;easydict_user&amp;quot; already exists
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;总结一下：&lt;code&gt;数据库已经有一个easydict_user表了，如我我们想更新这个表的定义，同时又想保留其数据，一种方法是手动修改数据库各字段定义，比如使用dbshell工具；二种方法是，使用Django的migrate机制，保留每次makemigrations产生的脚本，这样你migrate的时候就可以只更新你修改的部分，也就是要保留这个migrations脚本文件，不然就得自己写。如果不保留这个migrations脚本，每次都删掉重新makemigrations，那么Django会认为，你是要重建一个表，那就与数据库中现有的表冲突了&lt;/code&gt;&lt;/p&gt;</content><category term="Django"></category><category term="Migrate"></category></entry><entry><title>See the scence at 5:00am again</title><link href="/blog/see-the-scence-at-500am-again.html" rel="alternate"></link><published>2018-10-18T12:38:39+08:00</published><updated>2018-10-18T12:38:39+08:00</updated><author><name>zqlai</name></author><id>tag:None,2018-10-18:/blog/see-the-scence-at-500am-again.html</id><summary type="html">&lt;p&gt;Went to bed at 5:00am last&amp;nbsp;night&lt;/p&gt;
&lt;p&gt;or, this&amp;nbsp;morning&lt;/p&gt;
&lt;p&gt;Saw the dawn scene of Changsha&amp;nbsp;again&lt;/p&gt;
&lt;p&gt;alone, not&amp;nbsp;lonely&lt;/p&gt;
&lt;p&gt;tired, but&amp;nbsp;exited&lt;/p&gt;
&lt;p&gt;fell into sleep with hope and&amp;nbsp;prospect&lt;/p&gt;
&lt;p&gt;with more&amp;nbsp;responsibilty&lt;/p&gt;
&lt;p&gt;for the engels by my&amp;nbsp;side&lt;/p&gt;</summary><content type="html">&lt;p&gt;Went to bed at 5:00am last&amp;nbsp;night&lt;/p&gt;
&lt;p&gt;or, this&amp;nbsp;morning&lt;/p&gt;
&lt;p&gt;Saw the dawn scene of Changsha&amp;nbsp;again&lt;/p&gt;
&lt;p&gt;alone, not&amp;nbsp;lonely&lt;/p&gt;
&lt;p&gt;tired, but&amp;nbsp;exited&lt;/p&gt;
&lt;p&gt;fell into sleep with hope and&amp;nbsp;prospect&lt;/p&gt;
&lt;p&gt;with more&amp;nbsp;responsibilty&lt;/p&gt;
&lt;p&gt;for the engels by my&amp;nbsp;side&lt;/p&gt;</content><category term="thought"></category><category term="fighting"></category></entry><entry><title>horovod on TH-1A works with mnist example</title><link href="/blog/horovod%20works.html" rel="alternate"></link><published>2018-10-15T18:01:17+08:00</published><updated>2018-10-15T18:01:17+08:00</updated><author><name>zqlai</name></author><id>tag:None,2018-10-15:/blog/horovod works.html</id><summary type="html">&lt;h2&gt;step to launch the mnist training&amp;nbsp;task&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;login the th-es-ln0
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;2.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; zqlai/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;3.allocate 2 &lt;span class="caps"&gt;GPU&lt;/span&gt; nodes with 4&amp;nbsp;processes&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yhalloc -N2 -n4 -pTH_GPU
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;4.check the allocated job and responsive&amp;nbsp;nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yhq
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;5.load the task using&amp;nbsp;mpirun&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; horovod
mpirun -np &lt;span class="m"&gt;4&lt;/span&gt; -H gn6,gn7 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;step to launch the mnist training&amp;nbsp;task&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;login the th-es-ln0
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;2.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; zqlai/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;3.allocate 2 &lt;span class="caps"&gt;GPU&lt;/span&gt; nodes with 4&amp;nbsp;processes&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yhalloc -N2 -n4 -pTH_GPU
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;4.check the allocated job and responsive&amp;nbsp;nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yhq
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;5.load the task using&amp;nbsp;mpirun&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; horovod
mpirun -np &lt;span class="m"&gt;4&lt;/span&gt; -H gn6,gn7 python examples/tensorflow_mnist.py
&lt;/pre&gt;&lt;/div&gt;</content><category term="horovod TH-1A"></category></entry><entry><title>My super title</title><link href="/blog/my-super-title.html" rel="alternate"></link><published>2018-10-15T10:40:02+08:00</published><updated>2018-10-15T10:40:02+08:00</updated><author><name>Alexis Metaireau</name></author><id>tag:None,2018-10-15:/blog/my-super-title.html</id><summary type="html">&lt;p&gt;Short version for index and&amp;nbsp;feeds&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the content of my super blog&amp;nbsp;post.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;t&lt;/span&gt;

&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;t&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;lib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="pelican"></category><category term="publishing"></category></entry><entry><title>misc</title><link href="/blog/misc.html" rel="alternate"></link><published>2018-10-15T10:39:22+08:00</published><updated>2018-10-15T10:39:22+08:00</updated><author><name>zqlai</name></author><id>tag:None,2018-10-15:/blog/misc.html</id><summary type="html">&lt;p&gt;Short version for index and&amp;nbsp;feeds&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the content of my super blog&amp;nbsp;post.&lt;/p&gt;</content><category term="life"></category><category term="photo"></category></entry></feed>